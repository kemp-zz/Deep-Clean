jobs:
  storage-cleanup:
    runs-on: ubuntu-latest
    timeout-minutes: 35
    permissions:
      actions: write
      contents: read

    steps:
      - name: 环境预检
        run: |
          set -euo pipefail
          echo "▂▂▂▂▂▂▂▂ 存储诊断 ▂▂▂▂▂▂▂▂"
          
          declare -a check_paths=(
            "/usr/lib/python3/dist-packages"
            "/var/lib/apt/lists"
            "/opt/hostedtoolcache/Python"
            "/usr/local/lib/python*"
            "~/.cache/pip"
          )
          
          for path in "${check_paths[@]}"; do
            if compgen -G "$path" > /dev/null; then
              echo "✅ 有效路径: $(ls -d $path)"
            else
              echo "::warning::路径不存在: $path"
            fi
          done
          echo "▂▂▂▂▂▂▂▂ 初始空间 ▂▂▂▂▂▂▂▂"
          df -h /

      - name: 智能清理引擎
        run: |
          set -eo pipefail
          echo "▂▂▂▂▂▂▂▂ 执行清理 ▂▂▂▂▂▂▂▂"
    
          # 智能APT清理
          pkgs_to_purge=(
            "azure-cli" "google-cloud-cli" 
            "temurin-*-jdk" "llvm-*-dev"
            "python3*" "pip*" "nodejs*"
          )
    
          echo "→ 智能识别已安装的APT包..."
          for pkg_pattern in "${pkgs_to_purge[@]}"; do
            regex_pattern=$(sed 's/*/.*/g' <<< "$pkg_pattern")
            installed_pkgs=$(apt list --installed 2>/dev/null | awk -F/ '{print $1}' | grep -E "^${regex_pattern}$")
            
            [ -z "$installed_pkgs" ] && continue  # 无安装包则跳过
            
            for pkg in $installed_pkgs; do
              echo "正在卸载: $pkg"
              sudo apt-get autopurge -y "$pkg" 2>&1 | grep -vE "未安装|not installed"
            done
          done
          
          # 系统级清理
          sudo apt-get autoremove --purge -y || true
          sudo apt-get -f install || true
          sudo apt-get autoclean
          sudo rm -rf /var/lib/apt/lists/*
          sudo rm -rf /var/cache/apt/archives/*
          sudo rm -rf /usr/share/doc/* /usr/share/man/*

          # Python生态清除
          echo "→ 完全清除Python环境..."
          sudo rm -rf /opt/hostedtoolcache/Python
          sudo rm -rf /usr/local/lib/python*
          sudo rm -rf ~/.cache/pip /root/.cache/pip
          sudo find /usr/lib /usr/local/lib -name "python*" -type d -exec rm -rf {} + 2>/dev/null

          # 开发工具链清理
          echo "→ 清理SDK工具链..."
          sudo rm -rf \
            /usr/local/lib/android \
            /usr/local/.ghcup \
            /opt/hostedtoolcache/CodeQL
          
          sudo find /usr/lib -type d $ \
            -name "azure*" -o \
            -name "google*" -o \
            -name "jdk*" -o \
            -name "llvm*" $ \
            -exec rm -rf {} + 2>/dev/null

      - name: 清理验证
        run: |
          echo "▂▂▂▂▂▂▂▂ 最终状态 ▂▂▂▂▂▂▂▂"
          df -h / | awk 'NR==2 {printf "释放空间: %.1fGB → 当前可用: %.1fGB\n", ($4-25)/1024, $4/1024}'
          
          echo "▂▂▂▂▂▂▂▂ 残留检测 ▂▂▂▂▂▂▂▂"
          declare -a check_targets=(
            "/usr/lib/python*" "/opt/hostedtoolcache/Python"
            "/usr/local/lib/android" "~/.cache/pip"
          )
          for target in "${check_targets[@]}"; do
            if compgen -G "$target" >/dev/null; then
              echo "::error::残留目录存在: $(ls -d $target)"
            else
              echo "✅ 清理成功: $target"
            fi
          done
