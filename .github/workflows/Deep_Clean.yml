name: Deep Clean
on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  storage-cleanup:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    permissions:
      contents: read
      actions: write
      packages: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Pre-Cleanup Checks
        run: |
          if ! sudo -n true 2>/dev/null; then
            echo "错误：工作流未配置sudo权限" >&2
            exit 1
          fi
          ls -ld /usr/local/lib/python3.* /opt/hostedtoolcache

      - name: 第三方工具链原子级清理
        run: |
          # 修复find语法错误[1,5](@ref)
          sudo find /opt/hostedtoolcache -maxdepth 2 \
            $ -name "1.2*" -o -name "node_modules" -o -name "__pycache__" $ \
            -mtime +30 -exec rm -rf {} + 2>/dev/null

          # 增强npm卸载逻辑[8](@ref)
          if modules=$(npm list -g --depth=0 --parseable | awk -F/ '{print $NF}' | grep -vE '^(npm|corepack)$'); then
            echo "$modules" | xargs sudo npm uninstall -g --no-audit
          else
            echo "全局Node模块列表获取失败，跳过卸载"
          fi

      - name: PIP Ecosystem Sanitization
        run: |
          echo "▂▂▂▂▂▂▂▂ Python 环境清理 ▂▂▂▂▂▂▂▂"
          # 分离用户级和系统级清理[3,5](@ref)
          pip list --user --format=freeze | 
            grep -vE '^(pip|setuptools|wheel)==' | 
            xargs -r pip uninstall -y

          sudo python3 -m pip cache purge 2>/dev/null || true
          sudo rm -rf ~/.cache/pip ~/.pyenv/versions/*
          
          sudo find /usr/local -path "*/__pycache__" -type d -exec rm -rf {} +
          sudo find /usr/local -name "*.pyc" -mtime +7 -delete

      - name: APT Nuclear Cleanup
        run: |
          echo "▂▂▂▂▂▂▂▂ APT 原子级清理 ▂▂▂▂▂▂▂▂"
          # 修复参数顺序错误[1,5](@ref)
          sudo dpkg --force-depends -P \
            google-cloud-sdk \
            azure-cli \
            postgresql-12 \
            openjdk-11-jdk

          sudo apt purge -y $(dpkg -l | awk '/^rc/{print $2}' | grep -vE '^(lib|fonts|linux)')
          
          current_kernel=$(uname -r | sed 's/-generic//')
          sudo apt purge -y $(dpkg -l 'linux-headers-*' | awk '/^ii/{print $2}' | grep -v $current_kernel)

      - name: Enhanced Storage Report
        continue-on-error: true
        run: |
          echo "▂▂▂▂▂▂▂▂ 存储分析报告 ▂▂▂▂▂▂▂▂"
          # 预装ncdu工具[5](@ref)
          if ! command -v ncdu &> /dev/null; then
            sudo apt-get update && sudo apt-get install -y ncdu
          fi

          sudo du -h --exclude={/proc,/sys,/dev} --max-depth=2 / 2>/dev/null | 
            sort -hr | head -10 | awk '
              BEGIN { print "路径                                   ➔ 占用空间" }
              { printf "%-40s ➔ \033[36m%8s\033[0m\n", $2, $1 }'

          sudo ncdu -x -o storage.json /
          if [ -f storage.json ]; then
            jq '[.directories[] | {path: .name, size: (.total_size/(1024 * 1024)|floor)}] | sort_by(-.size) | .[0:5]' storage.json
          else
            echo "存储分析报告生成失败"
          fi
