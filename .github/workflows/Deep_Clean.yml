name: Deep Clean
on: workflow_dispatch

jobs:
  storage-cleanup:
    runs-on: ubuntu-latest
    timeout-minutes: 35
    permissions:
      actions: write
      contents: read

    steps:
      - name: 环境预检
        run: |
          set -euo pipefail
          echo "▂▂▂▂▂▂▂▂ 存储诊断 ▂▂▂▂▂▂▂▂"
          
          declare -a check_paths=(
            "/usr/lib/python3/dist-packages"
            "/var/lib/apt/lists"
            "/opt/hostedtoolcache/Python"
            "/usr/local/lib/python*"
            "~/.cache/pip"
          )
          
          for path in "${check_paths[@]}"; do
            if compgen -G "$path" > /dev/null; then
              echo "✅ 有效路径: $(ls -d $path)"
            else
              echo "::warning::路径不存在: $path"
            fi
          done

          echo "▂▂▂▂▂▂▂▂ 初始空间 ▂▂▂▂▂▂▂▂"
          df -h /

      - name: 智能清理引擎
        run: |
          set -eo pipefail
          echo "▂▂▂▂▂▂▂▂ 执行清理 ▂▂▂▂▂▂▂▂"
    
          # 暴力级APT清理[4,6](@ref)
          pkgs_to_purge=(
            "azure-cli" "google-cloud-cli" 
            "temurin-*-jdk" "llvm-*-dev"
            "python3*" "pip*" "nodejs*"  # 新增Python相关包
          )
    
          for pkg in "${pkgs_to_purge[@]}"; do
            if dpkg-query -W "$pkg" >/dev/null 2>&1; then
              sudo apt-get autopurge -y "$pkg"  # 使用autopurge彻底删除[4](@ref)
            fi
          done
          
          # 增强型系统清理[2,6](@ref)
          sudo apt-get autoremove --purge -y
          sudo apt-get autoclean
          sudo rm -rf /var/lib/apt/lists/*
          sudo rm -rf /var/cache/apt/archives/*
          sudo rm -rf /usr/share/doc/* /usr/share/man/*  # 文档清理

          # 彻底删除Python生态[9,11](@ref)
          echo "→ 完全清除Python环境..."
          sudo rm -rf /opt/hostedtoolcache/Python
          sudo rm -rf /usr/local/lib/python*
          sudo rm -rf ~/.cache/pip /root/.cache/pip  # 双用户缓存清理
          sudo find /usr/lib /usr/local/lib -name "python*" -type d -exec rm -rf {} + 2>/dev/null

          # 扩展开发工具链清理[7](@ref)
          echo "→ 清理SDK工具链..."
          sudo rm -rf \
            /usr/local/lib/android \    # Android SDK
            /usr/local/.ghcup \         # Haskell工具链
            /opt/hostedtoolcache/CodeQL # CodeQL分析工具
          
          sudo find /usr/lib -type d $ \
            -name "azure*" -o -name "google*" \
            -o -name "jdk*" -o -name "llvm*" $ \
            -exec rm -rf {} +

          # 进程级空间释放[3](@ref)
          echo "→ 释放被占用的空间..."
          sudo lsof / | grep deleted | awk '{print $2}' | xargs -r kill -9
          sudo sync && echo 3 | sudo tee /proc/sys/vm/drop_caches

      - name: 清理验证
        run: |
          echo "▂▂▂▂▂▂▂▂ 最终状态 ▂▂▂▂▂▂▂▂"
          df -h / | awk 'NR==2 {printf "释放空间: %.1fGB → 当前可用: %.1fGB\n", ($4-25)/1024, $4/1024}'
          
          echo "▂▂▂▂▂▂▂▂ 残留检测 ▂▂▂▂▂▂▂▂"
          declare -a check_targets=(
            "/usr/lib/python*" "/opt/hostedtoolcache/Python"
            "/usr/local/lib/android" "~/.cache/pip"
          )
          for target in "${check_targets[@]}"; do
            if compgen -G "$target" >/dev/null; then
              echo "::error::残留目录存在: $(ls -d $target)"
            else
              echo "✅ 清理成功: $target"
            fi
          done

          echo "▂▂▂▂▂▂▂▂ 存储详情 ▂▂▂▂▂▂▂▂"
          sudo du -d 3 -h /usr /opt /var 2>/dev/null | sort -hr | awk '
            $2 ~ /(python|pip|jdk|android|ghcup)/ {
              printf "\033[31m%-50s ➔ %8s\033[0m\n", $2, $1
              next
            }
            NR<=15 {
              printf "%-50s ➔ \033[32m%8s\033[0m\n", $2, $1
            }'
