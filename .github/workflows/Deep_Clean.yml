name: Storage Monitor
on:
  schedule:
    - cron: '0 0 * * *'  # 每天 UTC 时间 0 点执行
  workflow_dispatch:      # 允许手动触发

permissions:
  contents: read
  actions: read
  packages: read

jobs:
  analyze:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Run Storage Analyzer
        id: storage
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # 使用内置令牌
        run: |
          # 动态获取仓库信息
          REPO_OWNER=$(echo "$GITHUB_REPOSITORY" | cut -d'/' -f1)
          REPO_NAME=$(echo "$GITHUB_REPOSITORY" | cut -d'/' -f2)
          
          # 执行统计脚本
          bash <<'EOF'
          #!/bin/bash
          set -eo pipefail

          # API 请求头配置
          API_HEADER=(-H "Accept: application/vnd.github+json" 
                      -H "Authorization: Bearer $GITHUB_TOKEN"
                      -H "X-GitHub-Api-Version: 2022-11-28")

          echo "::group::▂▂▂▂▂▂▂▂ 正在获取存储数据 ▂▂▂▂▂▂▂▂"
          
          # 制品数据查询
          artifacts=$(curl -s "${API_HEADER[@]}" \
            "https://api.github.com/repos/$REPO_OWNER/$REPO_NAME/actions/artifacts")
          artifact_size=$(echo "$artifacts" | jq -r '[.artifacts[].size_in_bytes] | add //0')
          artifact_mb=$(echo "scale=2; $artifact_size/1024/1024" | bc)MB

          # 缓存数据查询 (网页6)
          cache_usage=$(curl -s "${API_HEADER[@]}" \
            "https://api.github.com/repos/$REPO_OWNER/$REPO_NAME/actions/cache/usage")
          cache_mb=$(echo "$cache_usage" | jq -r '.full_cache_size_in_bytes/1024/1024 | floor')MB

          # 容器包数据查询 (网页3)
          packages=$(curl -s "${API_HEADER[@]}" \
            "https://api.github.com/users/$REPO_OWNER/packages?package_type=container")
          package_mb=$(echo "$packages" | jq -r '[.[].size_in_bytes] | add //0/1024/1024 | floor')MB

          echo "::endgroup::"

          # 生成报告文件
          echo "▂▂▂▂▂▂▂▂ 持久化存储统计 ▂▂▂▂▂▂▂▂
          制品存储：$artifact_mb (上限: 2GB)
          缓存使用：$cache_mb (上限: 10GB)
          容器包存储：$package_mb (上限: 1GB)
          ▂▂▂▂▂▂▂▂ 总使用量 ▂▂▂▂▂▂▂▂
          合计：$(echo "$artifact_mb $cache_mb $package_mb" | tr -d 'MB' | awk '{sum=$1+$2+$3; printf "%.2fMB\n", sum}')" > storage-report.txt

          # 输出到工作流变量
          echo "artifact_mb=$artifact_mb" >> $GITHUB_OUTPUT
          echo "cache_mb=$cache_mb" >> $GITHUB_OUTPUT
          echo "package_mb=$package_mb" >> $GITHUB_OUTPUT

      - name: Upload Report
        uses: actions/upload-artifact@v3
        with:
          name: storage-report
          path: storage-report.txt

      - name: Display Result
        run: |
          cat storage-report.txt
          echo "::warning::总存储使用率：${{ steps.storage.outputs.artifact_mb }} + ${{ steps.storage.outputs.cache_mb }} + ${{ steps.storage.outputs.package_mb }}"
